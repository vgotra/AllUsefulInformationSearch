// <auto-generated />
using System;
using Auis.StackOverflow.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Auis.StackOverflow.DatabaseMigrations.Migrations
{
    [DbContext(typeof(StackOverflowDbContext))]
    partial class StackOverflowDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.AcceptedAnswerCommentEntity", b =>
                {
                    b.Property<int>("WebDataFileId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AcceptedAnswerId")
                        .HasColumnType("int");

                    b.Property<int>("AcceptedAnswerPostWebDataFileId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ExternalCreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WebDataFileId", "Id");

                    b.HasIndex("AcceptedAnswerPostWebDataFileId", "AcceptedAnswerId");

                    b.ToTable("AcceptedAnswerComments", "StackOverflow");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.AcceptedAnswerEntity", b =>
                {
                    b.Property<int>("PostWebDataFileId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ExternalLastActivityDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostWebDataFileId", "Id");

                    b.HasIndex("PostWebDataFileId", "PostId")
                        .IsUnique();

                    b.ToTable("AcceptedAnswers", "StackOverflow");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.PostCommentEntity", b =>
                {
                    b.Property<int>("WebDataFileId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ExternalCreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("PostWebDataFileId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WebDataFileId", "Id");

                    b.HasIndex("PostWebDataFileId", "PostId");

                    b.ToTable("PostComments", "StackOverflow");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.PostEntity", b =>
                {
                    b.Property<int>("WebDataFileId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ExternalLastActivityDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("WebDataFileId", "Id");

                    b.ToTable("Posts", "StackOverflow");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.WebDataFileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("ExternalLastModified")
                        .HasColumnType("datetimeoffset")
                        .HasComment("Datetime of last modified of the web data file at StackOverflow archive.");

                    b.Property<bool>("IsSynchronizationEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Partial link to the web data file at StackOverflow archive.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name of the web data file at StackOverflow archive.");

                    b.Property<int>("ProcessingStatus")
                        .HasColumnType("int")
                        .HasComment("Processing status of file based on enumeration in source code.");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("WebDataFiles", "StackOverflow");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.AcceptedAnswerCommentEntity", b =>
                {
                    b.HasOne("Auis.StackOverflow.Models.Entities.AcceptedAnswerEntity", "AcceptedAnswer")
                        .WithMany("Comments")
                        .HasForeignKey("AcceptedAnswerPostWebDataFileId", "AcceptedAnswerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AcceptedAnswer");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.AcceptedAnswerEntity", b =>
                {
                    b.HasOne("Auis.StackOverflow.Models.Entities.PostEntity", "Post")
                        .WithOne("AcceptedAnswer")
                        .HasForeignKey("Auis.StackOverflow.Models.Entities.AcceptedAnswerEntity", "PostWebDataFileId", "PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.PostCommentEntity", b =>
                {
                    b.HasOne("Auis.StackOverflow.Models.Entities.PostEntity", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostWebDataFileId", "PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.PostEntity", b =>
                {
                    b.HasOne("Auis.StackOverflow.Models.Entities.WebDataFileEntity", "WebDataFile")
                        .WithMany("Posts")
                        .HasForeignKey("WebDataFileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WebDataFile");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.AcceptedAnswerEntity", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.PostEntity", b =>
                {
                    b.Navigation("AcceptedAnswer")
                        .IsRequired();

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Auis.StackOverflow.Models.Entities.WebDataFileEntity", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
